http://www.wonkity.com/~wblock/docs/html/disksetup.html#_the_old_standard_mbr

mount -t tmpfs -o size=512m tmpfs /tmp
mount -t tmpfs -o size=512m tmpfs /var
mount -o remount,size=1G /var

VBoxManage convertfromraw -format VDI FreeBSD-13.1-RELEASE-amd64-memstick.img FreeBSD-13.1-RELEASE-amd64-memstick.vdi


yeah in the disc1 iso pkg -r doesn't work but
cd /tmp && mkdir target && mount -t ufs /dev/vtbd0p2 target && chroot target
then doing pkg install python39  worked, but memstick is probably easier to deal with if it is a pain to clean up the bootstrap files 
for zfs you wouldn't really use mount you would probably zpool -o altroot=/tmp/target import



########### start here second time ################
geom disk list #ada0

gpart create -s gpt ada0
gpart add -t freebsd-boot -s 512k -l BOOT ada0
gpart add -t freebsd-zfs -a 1m -l ROOT ada0

gpart list | less

zpool create -o ashift=12 -o autotrim=on -o altroot=/mnt -O compression=on -O atime=off -O normalization=formD -O dnodesize=auto -O mountpoint=/ -O canmount=off vm_zroot gpt/root #ashift => 4kb sector size

zpool status
zfs list

zfs create -o canmount=off -o mountpoint=none vm_zroot/ROOT
zfs create -o canmount=noauto -o mountpoint=/ vm_zroot/ROOT/default

zfs mount vm_zroot/ROOT/default

zfs list

zfs create -o canmount=off vm_zroot/usr
zfs create -o canmount=off vm_zroot/var

zfs create -o setuid=off vm_zroot/usr/ports
zfs create -o setuid=off vm_zroot/usr/src
zfs create vm_zroot/home
zfs create -o exec=off vm_zroot/var/crash
zfs create -o exec=off vm_zroot/var/audit
zfs create -o exec=off vm_zroot/var/log
zfs create -o atime=on vm_zroot/var/mail
zfs create -o setuid=off vm_zroot/var/tmp
zfs create -o setuid=off -o utf8only=off vm_zroot/tmp

#create a swapfile
zfs create -V 4g -o org.freebsd:swap=on -o compression=zle -o dedup=off -o sync=disabled -o primarycache=metadata -o secondarycache=none vm_zroot/swap

zfs create vm_zroot/home/me

#ls /usr/freebsd-dist/

tar -x -C /mnt -f /usr/freebsd-dist/base.txz
tar -x -C /mnt -f /usr/freebsd-dist/kernel.txz #this goes under /mnt/boot/kernel

cat >> /mnt/boot/loader.conf << EOF
zfs_load="YES"
EOF

touch /mnt/etc/fstab #empty fstab so that some bsd software don't freak out

cat >> /mnt/etc/rc.conf << EOF
zfs_enable="YES"
ifconfig_em0="DHCP"
hostname="freebsd"
#defaultrouter="192.168.0.1"
#ifconfig_em0="inet 192.168.0.2/24"
EOF

# install bootcode
gpart list #set index i below according to what shows (more complicated if dualbooting with windows/linux)
gpart bootcode -b /mnt/boot/pmbr -p /mnt/boot/gptzfsboot -i 1 ada0

zpool set bootfs=vm_zroot/ROOT/default vm_zroot

#optional set zfs cache for quick lookup
zpool set cachefile=/mnt/boot/zfs/zpool.cache vm_zroot

reboot



# there is no hostname and root password

#set root password
passwd

swapinfo

adduser

#add user to wheel group
vi /etc/group

dhclient em0

#risk-free updating of FreeBSD
bectl create 13.0

reboot

tzsetup




# pkg install py39-pip
python3.9 -m pip install zfslib

def is_efi() {
    return not os.system("efivar")
}



portsnap fetch extract update -y
portsnap extract devel/py-anytree
portsnap extract devel/six
cd /usr/ports/devel/py-six/ && make install clean
cd /usr/ports/devel/py-anytree/ && make install clean

chroot /mnt










gpart add -t freebsd-boot -l BOOT -b 40 -s 512K ada0
gpart add -t freebsd-ufs -l ROOT -b 1M -s 8G ada0

gpart add -t freebsd-swap -l SWAP -s 512M ada0
gpart add -t freebsd-ufs  -l VAR -s 1G ada0
gpart add -t freebsd-ufs  -l TMP -s 256M ada0
gpart add -t freebsd-ufs  -l USR -a 1M ada0


gpart bootcode -b /boot/pmbr -p /boot/gptboot -i 1 ada0
newfs -U /dev/gpt/ROOT

mount /dev/gpt/ROOT /mnt

dhclient em0

install/bootstrap base.tcz and kernel.tcz in /mnt
tar -x -C /mnt -f /usr/freebsd-dist/base.txz
tar -x -C /mnt -f /usr/freebsd-dist/kernel.txz #this goes under /mnt/boot/kernel
mount -t devfs /dev /mnt/dev
mount -t procfs /proc /mnt/proc

chroot /mnt
dhclient em0
pkg install -y python39


date 0102030405 # Set a wrong date
ntpdate -v -b pool.ntp.org # Sync time


portsnap fetch extract update
cd /usr/ports/devel/py-six && make install clean
cd /usr/ports/devel/py-anytree && make install clean


#zpool import -o readonly=on readonlytank


#zfs snapshot tank/home/ahrens@friday
#zfs set compression=on tank/home/ahrens@now
#zfs set readonly=on




---------------------------------- ZFS ---------------------
mydisk=ada0
gpart destroy -F ada0
gpart create -s gpt ada0

#for uefi boot
#https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/configure-uefigpt-based-hard-drive-partitions?view=windows-11#system-partition
gpart add -a 4k -s 260M -t efi $mydisk <---- TODO find optimal size for "-a" aitomatically # original 800K
# Create a FAT32 partition
newfs_msdos -F 32 -c 1 /dev/${mydisk}p1 # OR newfs_msdos -F 32 -S 4096 -c 1 -L EFI /dev/${mydisk}p1
mount -t msdosfs -o longnames /dev/${mydisk}p1 /mnt
mkdir -p /mnt/EFI/BOOT
cp /boot/loader.efi /mnt/EFI/BOOT/BOOTX64.efi
umount /mnt

#for legacy boot
#gpart add -a 4k -s 512K -t freebsd-boot ada0
#gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 ada0

#2. Create Partitions
#gpart add -a 1m -s 4G -t freebsd-swap -l swap0 ada0
gpart add -a 1m -t freebsd-zfs -l disk0 ada0

#3. Create the Pool
xyz=$(gpart show -p $mydisk | grep zfs | awk '{print $3}')
mount -t tmpfs tmpfs /mnt #Mount a tmpfs to /mnt
zpool create -o altroot=/mnt zroot $xyz

#   4. Create the ZFS file system hierarchy
zfs set compress=on zroot
#Create a Boot Environment hierarchy 
zfs create -o mountpoint=none zroot/ROOT
zfs create -o mountpoint=none zroot/ROOT/default
mount -t zfs zroot/ROOT/default /mnt

#REZA added this
#bootstrap kernel and base here

# I SKIPPED THIS SEGMENt
#create rest of file system
zfs create -o mountpoint=/tmp  -o exec=on      -o setuid=off   zroot/tmp
zfs create -o canmount=off -o mountpoint=/usr                  zroot/usr
zfs create                                                     zroot/usr/home
zfs create                     -o exec=off     -o setuid=off   zroot/usr/src
zfs create                                                     zroot/usr/obj
zfs create -o mountpoint=/usr/ports            -o setuid=off   zroot/usr/ports
zfs create                     -o exec=off     -o setuid=off   zroot/usr/ports/distfiles
zfs create                     -o exec=off     -o setuid=off   zroot/usr/ports/packages
zfs create -o canmount=off -o mountpoint=/var                  zroot/var
zfs create                     -o exec=off     -o setuid=off   zroot/var/audit
zfs create                     -o exec=off     -o setuid=off   zroot/var/crash
zfs create                     -o exec=off     -o setuid=off   zroot/var/log
zfs create -o atime=on         -o exec=off     -o setuid=off   zroot/var/mail
zfs create                     -o exec=on      -o setuid=off   zroot/var/tmp

#   Links and Permissions
ln -s /usr/home /mnt/home
chmod 1777 /mnt/var/tmp
chmod 1777 /mnt/tmp

#configure boot environment
zpool set bootfs=zroot/ROOT/default zroot


#make a folder immutable:
chflags -R schg /usr



------------------ latest video

geom disk list #ada0

gpart create -s gpt ada0

# To know start of the disk, do:
startdisk=$(gpart show ada0 | grep free | awk '{print $1}') # 40

gpart add -b $startdisk -t freebsd-boot -s 512k -l BOOT ada0
# optional add swap
gpart add -t freebsd-zfs -a 1m -l ROOT ada0

gpart list | less

#copy bootloader code:
gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 ada0

kldload zfs

mkdir /tmp/pool
zpool create -fm /tmp/pool zroot /dev/gpt/ROOT
# OR zpool create -fm /tmp/pool zroot raidz1 /dev/gpt/ROOT1 /dev/gpt/ROOT2 /dev/gpt/ROOT3 ... /dev/gpt/ROOTn

zpool set bootfs=zroot zroot

zfs set checksum=fletcher4 zroot
zfs set atime=off zroot
zfs set compression=lz4 zroot

#rudimentary zfs file system for installing

zfs create zroot/usr
zfs create zroot/var
zfs create zroot/tmp
zfs create -o exec=on -o setuid=off zroot/tmp
zfs create -o exec=on -o setuid=off zroot/var/tmp
zfs create -o exec=off -o setuid=off zroot/var/empty
zfs create -o exec=off -o setuid=off zroot/var/run

#zfs list

chmod 1777 /tmp/pool/var/tmp

tar -xzpf /usr/freebsd-dist/base.txz -C /tmp/pool
tar -xzpf /usr/freebsd-dist/kernel.txz -C /tmp/pool

chroot /tmp/pool

cat >> /etc/rc.conf << EOF
zfs_enable="YES"
ifconfig_em0="DHCP"
hostname="freebsd"
sendmail_enable="NO"
sendmail_submit_enable="NO"
sendmail_outbound_enable="NO"
sendmail_msp_queue_enable="NO"
#defaultrouter="192.168.0.1"
#ifconfig_em0="inet 192.168.0.2/24"
EOF

cat >> /boot/loader.conf << EOF
zfs_load="YES"
zfs.root.mountfrom="zfs:zroot"
EOF

touch /etc/resolv.conf

tzsetup

cd /etc/mail
make aliases

cat >> /etc/fstab << EOF
# device        # mountpoint    # fstype        # opts  # dump  # pass
/dev/gpt/swap0  none            swap            sw      0       0

#exit chroot with CTRL+D or type exit

#zfs list
zfs unmount -a

#zfs list

zfs set mountpoint=legacy zroot
zfs set mountpoint=/home zroot/home
zfs set mountpoint=/usr zroot/usr
zfs set mountpoint=/var zroot/var
zfs set mountpoint=/tmp zroot/tmp

#zfs list -t all
#zfs list -t snapshot
#zfs rollback -r zroot@reza3
#zfs clone zroot@snap1 zroot/snap1_clone

pkg install -y python
pkg install -yx '^py[[:digit:]]+-pip-[[:digit:]]+'
tmp_ver=$(python --version | awk '{print $2}')
pyv=$(echo "${tmp_ver%.*}" | sed 's/\.//g')
pkg install -y py${pyv}-pip



MOUNT_NULLFS






--------------- connect to internet
date 0412131627
ntpdate -v -b ca.pool.ntp.org
dhclient em0
